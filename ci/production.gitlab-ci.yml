package_app_production:
  stage: build
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
  image: docker-hub.sandstorm.de/docker-infrastructure/php-app/build:8.1-v2
  needs:
    - build_assets
  cache:
    key: MyVendor.AwesomeNeosProject__composer
    paths:
      - app/.composer-cache
  interruptible: true
  script:
    - cd app
    - COMPOSER_CACHE_DIR=.composer-cache composer install --no-dev --ignore-platform-reqs
    - cd ..

    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/neos:main || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/neos:main -t $CI_REGISTRY_IMAGE/production:$CI_COMMIT_REF_NAME -f deployment/production/Dockerfile .
    - docker tag $CI_REGISTRY_IMAGE/production:$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE/production:latest
    - docker push $CI_REGISTRY_IMAGE/production:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE/production:latest

deploy_production:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
  image: docker-hub.sandstorm.de/docker-infrastructure/php-app/build:8.3-v3
  needs:
    - package_app_production
  environment:
    name: production
  script:
    - eval $(ssh-agent -s)
    - chmod 600 $SSH_PRIVATE_DEPLOY_KEY
    - ssh-add $SSH_PRIVATE_DEPLOY_KEY
    - mkdir -p ~/.ssh
    - ssh-keyscan -p 29418 -H your-domain.de >> ~/.ssh/known_hosts

    # deploy the actual application
    - scp -P 29418 docker-compose-prod.yml deploy@your-domain.de:~/your-project/docker-compose.yml
    - scp -P 29418 deployment/production/vector.flow.yaml deploy@your-domain.de:~/your-project/vector.flow.yaml
    # NOTE: to ensure vector always uses the most up-to-date config, we restart vector after deployment (because
    # vector.flow.yaml is *mounted* into the container)
    - |
      ssh -p 29418 deploy@your-domain.de "
        docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY &&
        cd your-project &&
        sed -ri 's/DOCKER_IMAGE_VERSION/$CI_COMMIT_REF_NAME/g' docker-compose.yml &&
        ([ -f .env ] || { echo 'ERROR: You manually need to create a .env file with secrets first.'; exit 1; }) &&
        docker compose pull &&
        docker compose up -d &&
        docker compose restart vector
      "

a11y_test_production:
  image: registry.gitlab.com/gitlab-ci-utils/gitlab-pa11y-ci:latest
  stage: accessibility
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - if: '$CI_COMMIT_TAG'
      when: never
  needs:
    - deploy_production
  allow_failure: true
  before_script:
    - npm install pa11y-ci-reporter-html
  script:
    - mkdir pa11y-ci-report-images
    - pa11y-ci --reporter=pa11y-ci-reporter-html
  artifacts:
    # Make sure artifacts are always saved, otherwise they will not be on failure.
    when: always
    expose_as: 'Accessibility Reports'
    paths:
      - pa11y-ci-report/
      - pa11y-ci-report-images/
    expire_in: 1 week
