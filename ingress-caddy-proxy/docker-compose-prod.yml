# This is the SHARED REVERSE PROXY INGRESS for all applications on this production system (i.e. all applications for the single customer).
#
# Main Features:
#
# - TLS termination
# - domain redirects
# - reverse proxying to the application(s)
# - /up-ingress health check URL
# - (potentially) display of error pages if site down
# - (potentially) access logs to NATS
#
# It is an extension point, because you can use any Caddy Module (or quite easily write your own in Go).
#
# ```
#                                    ┌────────────┐
#                                    │App A       │
#          ┌────────────────┐   ┌───▶│  (Docker)  │
#  Port 80 │ ingress caddy  │   │    └────────────┘
# Port 443 │  proxy         │───┤    ┌────────────┐
#          └────────────────┘   │    │App B       │
#          ^^ WE ARE HERE ^^    └───▶│  (Docker)  │
#                                    └────────────┘
#                       sharedIngressNetwork
#```
#
# DEPLOYMENT in .gitlab-ci.yml snippet:
# ```
# - scp -P 29418 -r ./ingress-caddy-proxy deployment@HOSTNAME:~/deployments/
# # docker-compose up, followed by caddy reload (in case only Caddyfile changed)
# - ssh -p 29418 deploy@your-domain.de "export HOSTNAME &&
#     cd ingress-caddy-proxy &&
#     mv docker-compose-prod.yml docker-compose.yml &&
#     docker-compose build && docker-compose up -d &&
#     docker-compose exec -T -w /etc/caddy caddy-ingress caddy reload
#   "
# ```
services:
  caddy-ingress:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: "${HOSTNAME}-ingress"
    restart: unless-stopped
    # Caddy ships with HTTP/3 support enabled by default. To improve the performance of this UDP
    # based protocol, the underlying quic-go library tries to increase the buffer sizes for its socket.
    # The NET_ADMIN capability allows it to override the low default limits of the operating system without
    # having to change kernel parameters via sysctl.
    cap_add:
      - NET_ADMIN
    #environment:
    #  CADDY_DOMAIN_OVERRIDE: customer-name-prod.sandstorm.dev
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./:/etc/caddy/
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - sharedIngressNetwork

volumes:
  caddy_data:
  caddy_config:

networks:
  sharedIngressNetwork:
    name: sharedIngressNetwork
