prototype(MyVendor.AwesomeNeosProject:Document.Blog.Tag) < prototype(MyVendor.AwesomeNeosProject:Document.AbstractPage) {
    body.main.content.blogtags = MyVendor.AwesomeNeosProject:Utility.ContentWidth {
        content = MyVendor.AwesomeNeosProject:Component.BlogTagList {
            tags = ${q(site).find('[instanceof MyVendor.AwesomeNeosProject:Document.Blog.Tag]')}
            activeTag = ${node}
        }
    }
    body.main.content.blogtags.@position = 'after mainContent'

    body.main.content.blogposts = MyVendor.AwesomeNeosProject:Utility.ContentWidth {
        content = Flowpack.Listable:PaginatedCollection {
            _allPosts = ${q(site).find('[instanceof MyVendor.AwesomeNeosProject:Document.Blog.Post][_hiddenInIndex != true]').sort('datePublished', 'DESC').get()}
            collection = ${Array.filter(this._allPosts, post =>
                q(post).property('tags') != null &&
                !Array.isEmpty(
                    Array.filter(q(post).property('tags'), category =>
                        category == node
                    )
                )
            )}

            prototype(Flowpack.Listable:Collection) {
                // We need to keep class 'blog-overview' for now because it's needed in the test
                listClass = 'blog-post-overview grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-5 mb-5 p-0 list-none'
                itemClass = 'blog-post-overview__post'

                itemRenderer = MyVendor.AwesomeNeosProject:Content.BlogPostPreview
            }

            prototype(Flowpack.Listable:Pagination) {
                class = "list-none p-0 my-8 mx-0 flex justify-center items-center gap-4 flex-wrap"
                itemClass = "w-8 h-8 border border-grey-lighter [&>a]:flex [&>a]:justify-center [&>a]:items-center [&>a]:w-full [&>a]:h-full"
                currentItemClass = "border-primary-main bg-primary-main [&>a]:text-white"
            }
        }
    }

    body.main.content.blogposts.@position = 'after mainContent'
}
