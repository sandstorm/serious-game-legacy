prototype(MyVendor.AwesomeNeosProject:Content.Image) < prototype(Neos.Neos:ContentComponent) {
    renderer = MyVendor.AwesomeNeosProject:Component.Image {
        imageSource = Sitegeist.Kaleidoscope:AssetImageSource {
            asset = ${q(node).property('image')}
        }
        imageUri = MyVendor.AwesomeNeosProject:Helper.ResourceUri {
            resource = ${q(node).property('image').resource}
        }
        fileExtension = ${q(node).property('image').resource.fileExtension}
        alternativeText = MyVendor.AwesomeNeosProject:Helper.ImageAltText {
            image = ${q(node).property('image')}
        }
        imageDescription = ${q(node).property('imageDescription')}

        href = ${q(node).property('link')}
        href.@process.convert = Neos.Neos:ConvertUris
        isExternalLink = ${q(node).property('isExternalLink')}
        align = ${q(node).property('align')}

        sizes = MyVendor.AwesomeNeosProject:Helper.ImageSizes {
            type = Neos.Fusion:Case {
                contentInFourColumn {
                    condition = ${q(node).parents('[instanceof MyVendor.AwesomeNeosProject:Content.FourColumn]').get()}
                    renderer = 'four-column'
                }
                contentInThreecolumn {
                    condition = ${q(node).parents('[instanceof MyVendor.AwesomeNeosProject:Content.ThreeColumn]').get()}
                    renderer = 'three-column'
                }
                contentInTwocolumn {
                    condition = ${q(node).parents('[instanceof MyVendor.AwesomeNeosProject:Content.TwoColumn]').get()}
                    renderer = 'two-column'
                }
                default {
                    condition = true
                    renderer = ''
                }
            }
        }
    }
}
