prototype(MyVendor.AwesomeNeosProject:Component.PageMenu.Main) < prototype(Neos.Fusion:Component) {
    // We use a span-tag for the menu icon because the i-tag causes some trouble with the rendering of the 404-Page

    // We use alpine js to toggle the mobile menu.
    // If the state of 'mobileMenuOpen' changes to true we add a class in PageMenu.Main.fusion.
    renderer = afx`
        <nav class="flex justify-between items-center flex-nowrap h-16" x-data="{ mobileMenuOpen: false }">
            <div class="inline-block">
                <MyVendor.AwesomeNeosProject:Component.PageHeader.Logo/>
            </div>

            <button
                x-on:click="mobileMenuOpen = !mobileMenuOpen"
                id="open-mobile-menu"
                class="flex lg:hidden justify-center items-center flex-col p-1 m-0 h-8 w-8 text-2xl text-primary-main hover:text-primary-dark focus:text-primary-dark focus:border focus:border-primary-dark"
                title={I18n.translate('MyVendor.AwesomeNeosProject:Base:openMenu')}
            >
                <span class="icon-bars" aria-hidden="true"></span>
                <span class="sr-only">{I18n.translate('MyVendor.AwesomeNeosProject:Base:openMenu')}</span>
            </button>

            <MyVendor.AwesomeNeosProject:Component.PageMenu.Main.Inner/>
            <MyVendor.AwesomeNeosProject:Component.LanguageMenu/>
        </nav>
    `
}

prototype(MyVendor.AwesomeNeosProject:Component.PageMenu.Main.Inner) < prototype(Neos.Fusion:Component) {
    @propTypes {
        @strict = true
    }

    @private.menuItems = Neos.Neos:MenuItems {
        maximumLevels = 2
        filter = "
            Neos.Neos:Document,
            !MyVendor.AwesomeNeosProject:Document.NotFoundPage,
            !MyVendor.AwesomeNeosProject:Document.Blog.Tags,
            !MyVendor.AwesomeNeosProject:Document.Blog.Post,
            !MyVendor.AwesomeNeosProject:Document.Folder,
        "
    }

    // we use alpine js to toggle the main menu for mobile screen size
    // :class sets the visible class depending on the 'mobileMenuOpen' state (See PageMenu.fusion)
    renderer = afx`
        <div class="[&>div]:block [&>div]:mb-4 bg-white lg:flex lg:justify-center lg:flex-nowrap page-menu__main lg:[&>div]:hidden" :class="mobileMenuOpen ? 'block absolute w-full left-0 top-16 z-[999] border-b border-b-grey-lighter' : 'hidden'" "x-on:resize.window"="mobileMenuOpen = false" x-cloak>
            <ul class="m-0 p-0 list-none">
                <Neos.Fusion:Loop items={private.menuItems}>
                    <li
                        class={AtomicFusion.classNames(item.state, 'w-full py-2 lg:w-auto lg:inline-block lg:py-0 px-4 lg:h-16', {'group': item.subItems})}
                    >
                        <Neos.Neos:NodeLink
                            node={item.node}
                            attributes.title={I18n.translate('MyVendor.AwesomeNeosProject:Base:linkToPage') + item.label}
                            attributes.class={AtomicFusion.classNames(
                                'no-underline text-lg lg:leading-[80px] hover:text-primary-main focus:text-primary-main active:text-primary-main',
                                {
                                    'text-grey-main': item.state != 'current',
                                    'text-primary-main': item.state == 'current'
                                }
                            )}
                        >
                            {item.label}
                        </Neos.Neos:NodeLink>

                        <div @if.hasItems={item.subItems} class="block relative py-2 bg-white lg:hidden lg:group-hover:block lg:group-focus-within:block lg:py-8 lg:absolute lg:left-0 lg:top-16 lg:w-full lg:max-h-[80vh] lg:shadow-main-menu lg:z-[999] lg:overflow-hidden lg:overflow-y-scroll">
                            <div class="flex flex-nowrap justify-between h-full p-0 ml-4 lg:mx-auto lg:max-w-[800px]">
                                <ul @if.has={item.subItems} class="m-0 p-0 list-none">
                                    <Neos.Fusion:Loop items={item.subItems} itemName="item">
                                        <li class={AtomicFusion.classNames(item.state, 'leading-[2rem]')}>
                                            <Neos.Neos:NodeLink
                                                node={item.node}
                                                attributes.title={I18n.translate('MyVendor.AwesomeNeosProject:Base:linkToPage') + item.label}
                                                attributes.class={AtomicFusion.classNames(
                                                    'no-underline hover:text-primary-main focus:text-primary-main active:text-primary-main',
                                                    {
                                                        'text-black': item.state != 'current',
                                                        'text-primary-main': item.state == 'current'
                                                    }
                                                )}
                                            >
                                                {item.label}
                                            </Neos.Neos:NodeLink>
                                        </li>
                                    </Neos.Fusion:Loop>
                                </ul>
                            </div>
                        </div>
                    </li>
                </Neos.Fusion:Loop>
            </ul>
            <MyVendor.AwesomeNeosProject:Component.LanguageMenu/>
        </div>
    `
}
