prototype(MyVendor.AwesomeNeosProject:Component.Button) < prototype(Neos.Fusion:Component) {
    title = ''
    href = ''
    isExternalLink = false
    type = ''
    align = ''
    icon = ''
    iconAlignment = 'left'

    @propTypes {
        @strict = true
        title = ${PropTypes.string}
        href = ${PropTypes.string}
        isExternalLink = ${PropTypes.boolean}
        type = ${PropTypes.oneOf(['solid-blue', 'solid-grey', 'outline', 'link'])}
        align = ${PropTypes.oneOf(['left', 'center', 'right'])}
        icon = ${PropTypes.string}
        iconAlignment = ${PropTypes.oneOf(['left', 'right'])}
    }

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}

        _inBackend = MyVendor.AwesomeNeosProject:Helper.InBackend

        _buttonClasses = ${AtomicFusion.classNames('button','button--' + props.type)}
        _buttonWithIconClasses = ${AtomicFusion.classNames('button','button--' + props.type, 'button--with-icon', 'button--icon-' + props.iconAlignment)}

        renderer = afx`
            <div
                class={AtomicFusion.classNames(
                    'button__wrapper',
                    'button__wrapper--' + props.align
                )}
            >
                <Neos.Fusion:Tag
                    tagName={(props.href && !props._inBackend) ? 'a' : 'div'}
                    attributes.class={props.icon ? props._buttonWithIconClasses : props._buttonClasses}
                    attributes.href={props.href ? props.href : null}
                    attributes.target={props.isExternalLink ? '_blank' : null}
                >
                    <span @if.hasIcon={props.icon} class={AtomicFusion.classNames(props.icon)}></span>
                    {props.title}
                </Neos.Fusion:Tag>
            </div>
        `
    }
}
