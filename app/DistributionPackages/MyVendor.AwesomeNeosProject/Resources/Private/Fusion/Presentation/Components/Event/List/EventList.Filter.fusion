prototype(MyVendor.AwesomeNeosProject:Component.EventList.Filter) < prototype(Neos.Fusion:Component) {
    tags = null

    @propTypes {
        @strict = true
        tags = ${PropTypes.arrayOf(PropTypes.dataStructure({'title': PropTypes.string, 'isActive': PropTypes.boolean}))}
    }

    renderer = afx`
        <div class="event-list__filter" x-data="eventList">
            <button class="button button--solid-blue" data-testid="filterButton" x-on:click="toggleFilter" "x-on:click.outside"="closeFilter">
                {I18n.translate('MyVendor.AwesomeNeosProject:Base:filterDates')}
            </button>
            <div x-show="filterOpen" class="event-list__filter-options" x-cloak>
                <Neos.Fusion:Loop items={props.tags} itemName="tag">
                    <label class="event-list__tag">
                        <input
                            autocomplete="off"
                            type="checkbox"
                            name={tag.title}
                            checked={tag.isActive ? 'checked' : null}
                            id={tag.title}
                            x-on:click="filterByTagClick"
                        />
                        <span>{tag.title}</span>
                    </label>
                </Neos.Fusion:Loop>
            </div>
            <button
                class="button button--link event-list__delete-filter"
                data-testid="deleteFilterButton"
                x-on:click="deleteFilter"
                @if={Array.length(Array.filter(props.tags, tag => tag.isActive == true)) != 0}
            >
                {I18n.translate('MyVendor.AwesomeNeosProject:Base:resetFilters')}
            </button>
        </div>
    `
}
