data_dir: "/app/Data/Logs"
api:
  enabled: true

sources:
  flow_exceptions:
    type: file
    include:
      - "/app/Data/Logs/Exceptions/*.txt"
    oldest_first: true
    fingerprint:
      strategy: device_and_inode
    multiline:
      start_pattern: ^
      mode: continue_through
      condition_pattern: .*
      timeout_ms: 1000

transforms:
  remove_ip_address:
    inputs:
      - flow_exceptions
    type: remap
    source: |
      replaced, err = replace(.message, pattern:r'(?:[0-9]{1,3}\.){3}[0-9]{1,3}', with: "XXX.XXX.XXX.XXX", count: -1)
      if err == null {
        .message = replaced
      }
  remove_http_request_from_flow_exceptions:
    inputs:
      - remove_ip_address
    type: remap
    source: |
      parsed, err = parse_regex(.message, r'(?s)(?P<Stacktrace>.*)\nHTTP REQUEST:')
      if err == null {
        .message = parsed.Stacktrace
      }
  flow_exceptions_add_sandstorm_metadata__STORE:
    inputs:
      - remove_http_request_from_flow_exceptions
    type: remap
    source: |
      .customer.tenant = "${CUSTOMER_TENANT:?CUSTOMER_TENANT env must be specified, f.e. mycustomer}"
      .customer.project = "${CUSTOMER_PROJECT:?CUSTOMER_PROJECT env must be specified, f.e. mycustomer.myproject}"
      .host.name = "${HOST_NAME:?HOST_NAME env must be specified, f.e. myhost}"
      .host.group = "${HOST_GROUP:?HOST_GROUP env must be specified, f.e. mygroup}"
      .event.module = "flow"
      .event.dataset = "flow.exceptions"
sinks:
  v2_sandstorm_aggregation:
    inputs:
      - "*__STORE"
    type: nats
    url: "${NATS_TARGET_SERVER_ADDRESS:?NATS_TARGET_SERVER_ADDRESS env must be specified, f.e. nats://demo.nats.io}"
    subject: "${NATS_TARGET_SUBJECT:?NATS_TARGET_SUBJECT env must be specified, f.e. logs.default.system.primary}"
    connection_name: vector
    auth:
      strategy: credentials_file
      credentials_file:
        path: "${NATS_CREDENTIALS_FILE:?NATS_CREDENTIALS_FILE env must be specified}"
    encoding:
      codec: json
      timestamp_format: rfc3339













# to run the tests, use:
# CUSTOMER_TENANT=x CUSTOMER_PROJECT=y HOST_NAME=z HOST_GROUP=a NATS_TARGET_SERVER_ADDRESS=a NATS_TARGET_SUBJECT=a NATS_CREDENTIALS_FILE=a  vector test vector.flow.yaml
tests:
  - name: "Strip HTTP footer"
    inputs:
      - insert_at: remove_http_request_from_flow_exceptions
        type: raw
        value: |
          Test1

          Test2
          Test3


          HTTP REQUEST:
          _hjid=f1b268cf-c48e-47fd-8fe9-0691c09f4197; fpestid=Srvr8xKzAaOYgqlhooI943lCdE5gdd-9rYAnDsbUwGSLq8SJ83YVRK1Y8lC2yfBj9kS8Xw; _fbp=fb.1.1620286011204.306646072; _hjTLDTest=1; _hjAbsoluteSessionInProgress=0; Neos_Session=29PWjkNeLS2uNGq0x1HqMnIYy4jqYOof; _hjIncludedInPageviewSample=1de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7gzip, deflate, brhttps://de.solarwatt5.dsinet.de/neos/content?node=%2Fsites%2Fsolarwatt-website%2Fnode-9renqy2q99kqa%2Fnode-31wd489o42h52%2Fnode-y6c6vnec76tux%40user-kristinschubert%3Bmarket%3DDEemptycorssame-originhttps://de.solarwatt5.dsinet.de*/*application/jsonMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36?09676d4768b160f068a993072acbe56fe" Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90"Authorization: ****944de.solarwatt5.dsinet.de

          PHP PROCESS:
          Inode: 926113
          PID: 232532
          UID: 5008
          GID: 5007
          User: web3
    outputs:
      - extract_from: remove_http_request_from_flow_exceptions
        conditions:
          - type: vrl
            source: |
              assert_eq!(.message, "Test1\n\nTest2\nTest3\n\n")

  - name: "replace IP addresses"
    inputs:
      - insert_at: remove_ip_address
        type: raw
        value: |
          127.0.0.1
          6.6.6.12:12345
    outputs:
      - extract_from: remove_ip_address
        conditions:
          - type: vrl
            source: |
              assert_eq!(.message, "XXX.XXX.XXX.XXX\nXXX.XXX.XXX.XXX:12345\n")

