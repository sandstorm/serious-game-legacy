apiVersion: k8s.sandstorm.de/v1alpha1
kind: OneContainerOnePort
metadata:
  namespace: myvendor-awesomeneosproject-staging
  name: app
spec:
  appName: myvendor-awesomeneosproject-staging
  description: 'Sample Laravel Deployment in the Rancher Cluster.'

  hostNames:
    myvendor-awesomeneosproject-staging.cloud.sandstorm.de: []

  node: worker4
  image: docker-hub.sandstorm.de/infrastructure/laravel-on-docker-kickstart/laravel:main

  port: 8081
  # Set to false when a real DNS entry for staging/staging exists
  stagingCertificates: false

  env:
    SHELL_ENV_DISPLAY: 'staging-myvendor-awesomeneosproject'
  extraPodEnvInK8sFormat:
    - name: DB_CONNECTION
      value: "mariadb"
    # DB_HOST matching already
    - name: DB_PORT
      value: "3306"
    - name: DB_USERNAME
      value: "$(DB_USER)"
    # DB_PASSWORD is matching already
    - name: DB_DATABASE
      value: "$(DB_NAME)"

  envFromConfigMaps:
    - db
  envFromSecrets:
    - db
    #- deepl-api-key
    #- sandstorm-maps-api-key

  httpBasicPasswordProtection:
    enabled: true
    secretName: basic-auth

  healthChecks:
    readinessProbe:
      enabled: false

    livenessProbe:
      enabled: false

  redis: transient

  volumes:
    - name: persistent
      mountPath: /app/Data/Persistent

  # we want a volume for caches so that we don't fill up the disk -
  # otherwise we waste disk space because of containerd writable overlay internals
  extraVolumesInK8sFormat:
    - name: temporary
      # emptyDir are volumes that get created empty when a Pod is created. They are deleted when the Pod is deleted.
      emptyDir: { }
  extraVolumeMountsInK8sFormat:
    - mountPath: /app/Data/Temporary
      name: temporary

  sso:
    enabled: false

  stopped: false
